* {
	margin: 0;
	padding: 0;
	font-family: 'Oswald';
	/*задаем семейство шрифта для всей страницы*/
}

/*Здесь мы убраем отступы и просветы у всех(*) элементов страницы, чтобы было легче работать. */

.menu {
	width: 100%;
	/*выставляем 100% ширины, для шапки.*/
	height: 110px;
	/*высота согласно макету*/
	display: flex;
	/*так как вложены два блока, превращаем шапку во флекс*/
	flex-direction: row;
	/*расспологаем в линию*/
	justify-content: space-between;
	/*устанавливаем просвет между вложенными блоками*/
	align-items: center;
	/*расспологаем блоки по центру (по вертикальной прямой)*/
}


main {
	width: 100%;
	/*так как у всех разная ширина монитора, выставляем 100% ширины окна браузера (монитора), для всего тела страницы.*/
}

.footer_main {
	width: 100%;
	/*выставляем 100% ширины, для подвала.*/
}

.logo h1 {
	display: flex;
	/*для легкого управления элементом, превращаем блок и его потомка во флекс*/
	margin-left: 80px;
	/*создаем отступ согласно макету*/
	font-style: normal;
	font-weight: 500;
	font-size: 36px;
	text-align: center;
	color: #000000;
	/*оформляем текс согласно макету*/
}

.navigation {
	display: flex;
	/*в панели навигации !4 элемента. создаем флекс контейнер чтобы было легче управлять элементами*/
	flex-direction: row;
	/*расспологаем в линию*/
	justify-content: space-around;
	/*устанавливаем просвет между вложенными блоками*/
	margin-right: 80px;
	/*создаем отступ согласно макету*/
	width: 392px;
	/*Даем пространства, чтобы немного разрядить меню. согласно макету, ширина слов 51+57+47+99px. добавляем им расстояние 46+46+46. общая ширина меню получается 392px*/
}


.click {
	display: block;
	/* тег "а" - это строчный элемент. нужно превратить его в блочный*/
	text-decoration: none;
	/*убираем подчеркивание*/
	font-style: normal;
	font-weight: 300;
	font-size: 24px;
	color: #000000;
	/*создаем оформление для текта меню*/
}

/*между шапкой и подвалом, мы имеем 4 условных секции, на которые можно разделить страницу для внятной семантики. далее работаем с секциями. <section> - это блочный элемент*/

.home {
	height: 622px;
	width: 100vw;
	/*задаем высоту секции и ширину равную экрану*/
	background-image: url("https://source.unsplash.com/vSuQJKZkt4U/1920x1080");
	/*назначаем картинку фоном блока*/
	background-size: 100%;
	/*задаем размер картинки равной высоте и ширине родителя. изображение наследует размер блока, будет изменяться при изменении экрана. !делаем ее адаптивной*/
	background-position: center;
	/*размещаем картинку в центре*/
	background-repeat: no-repeat;
	/*отключаем повторение изображения*/
}

.cup_text {
	display: block;
	/*превращаем строчный элемент в блочный.*/
}

.bold_line {
	width: 5.56%;
	height: 1.6%;
	background-color: #817070;
	/* в макете ширина страницы 1440px, а ширина линии 80px. это примерно 5.56% в ширину и 1.6% в высоту от размера родителя. Сделаем ее адаптивной, задав это значение по одношению к родителю.*/
}


.cup {
	display: flex;
	/*в контейнере находяться два блока. для легкого выравнивания, превратив его во флекс*/
	height: inherit;
	width: inherit;
	/*теперь наш флекс блок унаследовал значения родителя*/
	flex-direction: column;
	align-items: center;
	justify-content: center;
	/*рассположим все блоки правильно*/
}

.cup_text {
	font-style: normal;
	font-weight: 700;
	font-size: 60px;
	text-align: center;
	color: #FFFFFF;
	/*задаем стиль для текста на чашке "TAKE YOUR TIME"*/
}

.story {
	height: 632px;
	width: 100vw;
	/*задаем высоту секции и ширину равную экрану*/
}

.story_fx {
	display: flex;
	/*превращаем раздел во флекс*/
	height: inherit;
	width: inherit;
	/*теперь наш флекс блок унаследовал значения родителя*/
	justify-content: space-evenly;
	/*придаем блокам более разряженное значение*/
	align-items: center;
	/*выравниваем элементы по центру*/
	flex-direction: row;
	/*выстраиваем блоки в линию*/
	flex-wrap: wrap;
	/*задаем перенос блоков*/
}

.story_title {
	width: 100vw;
	/*так как блоки получили свойство переноситься, зададим для этого блока ширину, равную экрану. тогда этот блок займет все пространство и заставит остальные да перенестись ниже*/
	align-self: center;
	/*выравниваем блок по центру*/
	margin-top: 32px;
	/*зададим равное пространство согласно макету*/
	padding-left: 50%;
	padding-right: 50%;
	/*чтобы расположить текст в центре, добавим внутренний отстeп равный половине экрана*/
	font-style: normal;
	font-weight: 500;
	font-size: 36px;
	color: #000000;
	/*оформим текст согласно макету*/
}

.ledy_coffee {
	height: 400px;
	width: 600px;
	/*задаем размеры блока для картинки*/
	box-sizing: border-box;
	/*убираем границы с размера*/
	background-image: url("https://source.unsplash.com/X4RJG4aNi8o/1920x1080");
	/*назначаем картинку фоном блока*/
	background-size: cover;
	/*приказываем изображению уместиться в блоке*/
}

.text {
	display: block;
	/*это строчный элемент. надо превратить его в блок, чтобы использовать флексбокс*/
	width: 597px;
	height: 180px;
	/*дадим размер блоку согласно макету*/
	font-style: normal;
	font-weight: 300;
	font-size: 20px;
	color: #000000;
}

/*ниже здесь начинается блог. это самая сложная конструкция на странице. опишу подробнее*/

.blog {
	height: 711px;
	width: 100vw;
	/*задаем высоту секции и ширину равную экрану*/
	background: #EFEFEF;
	/*делаем фон серым*/
}

/*это общая секция, в которая является основным фоном.*/

.gallery {
	display: flex;
	/*превращаем раздел во флекс*/
	height: inherit;
	width: inherit;
	/*теперь наш флекс блок унаследовал значения родителя*/
	justify-content: space-evenly;
	/*придаем блокам более разряженное значение*/
	align-items: center;
	/*выравниваем элементы по центру*/
	flex-direction: row;
	/*выстраиваем блоки в линию*/
	flex-wrap: wrap;
	/*задаем перенос блоков*/
}

/*весь этот блок остается невидимым, но нужен чтобы правильно рассположить все карточки в галерее. пожтому мы превратили его во флексбокс и разпределили содержимое.*/

.blog_title {
	padding-left: 50%;
	padding-right: 50%;
	/*чтобы расположить текст в центре, добавим внутренний отстeп равный половине экрана. теперь этот блок займет все пространство и заставит остальные да перенестись ниже*/
	font-style: normal;
	font-weight: 500;
	font-size: 36px;
	text-align: center;
	color: #000000;
	/*оформляем текст*/
	margin-top: 30px;
	/*центрируем согласно макету*/
}


.card {
	width: 365px;
	height: 474px;
	/*задаем размер согласно макету.*/
	background-color: #FFFFFF;
	/*задаем цвет фона*/
	display: flex;
	flex-direction: column;
	justify-content: space-evenly;
	/*так как у нас внутри карточки присутствуют три элемента, мы также превратим ее во флексбокс, чтобы расспределить сожержимое равномерно. выравниваем согласно макету*/
	/*также этот контейнер понадобиться нам для создания анимации*/
}

.card_name {
	display: block;
	align-self: flex-start;
	margin-left: 20px;
	/*загловок карточки оказался в середине. чтобы сдвинуть его согласно макету, выравниваем его по началу флексбокса, и задаем отступ согласно макету.*/
	font-style: normal;
	font-weight: 400;
	font-size: 24px;
	text-align: center;
	color: #000000;
	/*оформляем текст*/
}

.card_foto {
	width: 325px;
	height: 216px;
	/*задаем размер блока согласно макету.*/
	box-sizing: border-box;
	/*убираем границы с размера*/
	margin-left: auto;
	margin-right: auto;
	/*выравниваем в центре*/
	/*такие теги как </figure> и </figcaption> нужны для создания галереи. если говорить просто - чтобы можно было привязать описание к изображению и сделать его одним целым.*/
}

.foto {
	height: 100%;
	width: 100%;
	/*чтобы изображение не выходило за пределы блока, зададим ему размер равный 100% от родителя.*/
}

.card_text {
	display: inline-block;
	width: 325px;
	height: 108px;
	/*задаем размер блока согласно макету.*/
	font-style: normal;
	font-weight: 300;
	font-size: 18px;
	color: #000000;
	/*оформляем текст*/
	margin-left: auto;
	margin-right: auto;
	/*выравниваем в центре*/
}

.subs {
	width: 100vw;
	height: 337px;
	background: #817070;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.subs_title {
	margin-left: auto;
	margin-right: auto;
	padding-bottom: 28px;
	font-style: normal;
	font-weight: 500;
	font-size: 36px;
	text-align: center;
	color: #FFFFFF;
}

.subs_form {
	margin-left: auto;
	margin-right: auto;
	display: flex;
	flex-direction: column;
}


.input {
	width: 300px;
	height: 55px;
	background: #817070;
	border: 3px solid #FFFFFF;
	margin-bottom: 28px;
}

input::placeholder {
	color: #FFFFFF;
	font-style: normal;
	font-weight: 300;
	font-size: 20px;
	line-height: 30px;
	text-align: center;
}

.button {
	align-self: center;
	width: 129px;
	height: 55px;
	background: #FFFFFF;
	border: 3px solid #FFFFFF;
	font-style: normal;
	font-weight: 500;
	font-size: 20px;
	line-height: 30px;
	text-align: center;
	text-transform: uppercase;
	color: #817070;
}